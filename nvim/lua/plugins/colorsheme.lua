-- Catppuccin Mocha colors palettes
-- rosewater = "#f5e0dc",
-- flamingo = "#f2cdcd",
-- pink = "#f5c2e7",
-- mauve = "#cba6f7",
-- red = "#f38ba8",
-- maroon = "#eba0ac",
-- peach = "#fab387",
-- yellow = "#f9e2af",
-- green = "#a6e3a1",
-- teal = "#94e2d5",
-- sky = "#89dceb",
-- sapphire = "#74c7ec",
-- blue = "#89b4fa",
-- lavender = "#b4befe",
-- text = "#cdd6f4",
-- subtext1 = "#bac2de",
-- subtext0 = "#a6adc8",
-- overlay2 = "#9399b2",
-- overlay1 = "#7f849c",
-- overlay0 = "#6c7086",
-- surface2 = "#585b70",
-- surface1 = "#45475a",
-- surface0 = "#313244",
-- base = "#1e1e2e",
-- mantle = "#181825",
-- crust = "#11111b",

return {
  "catppuccin/nvim",
  lazy = false,
  name = "catppuccin",
  priority = 1000,
  opts = function()
    -- local ucolors = require("catppuccin.utils.colors")

    return {
      flavour = "mocha",
      integrations = {
        aerial = true,
        alpha = true,
        cmp = true,
        dashboard = true,
        flash = true,
        fzf = true,
        grug_far = true,
        gitsigns = true,
        headlines = true,
        illuminate = true,
        indent_blankline = { enabled = true },
        leap = true,
        lsp_trouble = true,
        mason = true,
        markdown = true,
        mini = true,
        native_lsp = {
          enabled = true,
          underlines = {
            errors = { "undercurl" },
            hints = { "undercurl" },
            warnings = { "undercurl" },
            information = { "undercurl" },
          },
        },
        navic = { enabled = true, custom_bg = "lualine" },
        neotest = true,
        neotree = true,
        noice = true,
        notify = true,
        semantic_tokens = true,
        snacks = {
          enabled = true,
        },
        telescope = true,
        treesitter = true,
        treesitter_context = true,
        which_key = true,
      },
      custom_highlights = function(colors)
        return {
          FloatBorder = { fg = colors.overlay0, bg = colors.base },
          NormalFloat = { bg = colors.base },
          -- CursorLineNr = { bg = ucolors.vary_color({ latte = ucolors.lighten(colors.mantle, 0.70, colors.base) }, ucolors.darken(colors.surface0, 0.64, colors.base))}

          -- blink.cmp
          BlinkCmpMenu = { bg = colors.base },
          -- BlinkCmpMenuBorder = { bg = colors.base },
          -- BlinkCmpDoc = { bg = colors.base },
          -- BlinkCmpDocBorder = { bg = colors.base },
          BlinkCmpMenuBorder = { fg = colors.overlay0, bg = colors.base },
          BlinkCmpDocBorder = { fg = colors.overlay0, bg = colors.base },
          BlinkCmpMenuSelection = { bg = colors.surface0 },
          BlinkCmpSignatureHelpBorder = { fg = colors.yellow, bg = colors.base },
          -- BlinkCmpSignatureHelp = { bg = colors.mantle },
          BlinkCmpLabelMatch = { fg = colors.mauve },
          BlinkCmpLabel = { fg = colors.text },

          -- Snacks
          -- SnacksPickerBorder = { fg = colors.blue },
          -- SnacksPickerSelection = { fg = colors.text, bg = colors.surface0, style = {} },
          -- SnacksPickerSelectionCaret = { fg = colors.red },
          -- SnacksPickerMatching = { fg = colors.peach },
          -- SnacksPickerPromptPrefix = { fg = colors.yellow, bg = colors.crust },
          -- SnacksPickerPromptTitle = { fg = colors.crust, bg = colors.mauve, style = { "bold", "italic" } },
          -- SnacksPickerPrompt = { bg = colors.crust },
          -- SnacksPickerPromptBorder = { bg = colors.crust, fg = colors.crust },
          -- SnacksPickerResults = { bg = colors.mantle },
          -- SnacksPickerResultsTitle = { fg = colors.crust, bg = colors.green, style = { "bold", "italic" } },
          -- SnacksPickerResultsBorder = { bg = colors.mantle, fg = colors.mantle },

          -- SnacksPicker = { bg = colors.crust },
          -- SnacksPickerBackdrop = { bg = colors.base },
          -- SnacksBackdrop = { bg = colors.base },
          -- SnacksBackdrop_000000 = { bg = colors.base },
          -- SnacksPickerBox = { bg = colors.crust },
          -- SnacksPickerPreviewfooter = {},
          -- SnacksPickerBoxFooter = {},
          -- SnacksPickerParent = { fg = colors.surface0, bg = "None" },

          -- SnacksPickerList = { bg = colors.mantle },
          -- SnacksPickerListTitle = { bg = colors.mantle },
          --
          -- SnacksPickerInput = { bg = colors.mantle },
          SnacksPickerInputCursorLine = { bg = colors.base },
          -- SnacksPickerInputBorder = { bg = colors.mantle, fg = colors.mantle },
          --
          -- SnacksPickerBoxBorder = { bg = colors.mantle, fg = colors.mantle },
          -- SnacksPickerBoxCursorLine = { bg = colors.mantle },
          -- SnacksPickerBoxTitle = { fg = colors.crust, bg = colors.mauve, style = { "bold", "italic" } },
          --
          -- SnacksPickerPreview = { bg = colors.mantle },
          -- SnacksPickerPreviewBorder = { bg = colors.mantle, fg = colors.mantle },
          -- SnacksPickerPreviewTitle = { fg = colors.crust, bg = colors.sapphire, style = { "bold", "italic" } },

          -- =============================================
          -- copied from github.com/adibhanna/nvim
          -- =============================================
          -- -- Completion menu styling
          -- Pmenu = { bg = colors.mantle, fg = colors.text },
          -- PmenuSel = { bg = colors.surface0, fg = colors.text },
          -- PmenuSbar = { bg = colors.surface0 },
          -- PmenuThumb = { bg = colors.surface2 },
          -- PmenuExtra = { bg = colors.mantle, fg = colors.subtext1 },
          --
          -- -- Floating windows
          -- NormalFloat = { bg = colors.mantle },
          -- FloatBorder = { bg = colors.mantle, fg = colors.surface2 },
          -- FloatTitle = { bg = colors.mantle, fg = colors.text },
          --
          -- -- Blink.cmp specific highlighting
          -- BlinkCmpMenu = { bg = colors.mantle, fg = colors.text },
          -- BlinkCmpMenuBorder = { bg = colors.mantle, fg = colors.surface2 },
          -- BlinkCmpMenuSelection = { bg = colors.surface0, fg = colors.text },
          -- BlinkCmpScrollBarThumb = { bg = colors.surface2 },
          -- BlinkCmpScrollBarGutter = { bg = colors.surface0 },
          -- BlinkCmpLabel = { bg = colors.mantle, fg = colors.text },
          -- BlinkCmpLabelDeprecated = { bg = colors.mantle, fg = colors.overlay0, strikethrough = true },
          -- BlinkCmpLabelDetail = { bg = colors.mantle, fg = colors.subtext1 },
          -- BlinkCmpLabelDescription = { bg = colors.mantle, fg = colors.subtext1 },
          -- BlinkCmpKind = { bg = colors.mantle, fg = colors.peach },
          -- BlinkCmpSource = { bg = colors.mantle, fg = colors.overlay1 },
          -- BlinkCmpGhostText = { fg = colors.overlay0, italic = true },
          -- BlinkCmpDoc = { bg = colors.mantle, fg = colors.text },
          -- BlinkCmpDocBorder = { bg = colors.mantle, fg = colors.surface2 },
          -- BlinkCmpDocSeparator = { bg = colors.mantle, fg = colors.surface1 },
          -- BlinkCmpDocCursorLine = { bg = colors.surface0 },
          -- BlinkCmpSignatureHelp = { bg = colors.mantle, fg = colors.text },
          -- BlinkCmpSignatureHelpBorder = { bg = colors.mantle, fg = colors.surface2 },
          -- BlinkCmpSignatureHelpActiveParameter = { bg = colors.surface0, fg = colors.peach, bold = true },
          --
          -- -- Snacks.nvim picker NvChad style
          -- SnacksPicker = { bg = colors.base },
          -- SnacksPickerBorder = { fg = colors.surface0, bg = colors.base },
          -- SnacksPickerPreview = { bg = colors.base },
          -- SnacksPickerPreviewBorder = { fg = colors.base, bg = colors.base },
          -- SnacksPickerPreviewTitle = { fg = colors.base, bg = colors.green },
          -- SnacksPickerBoxBorder = { fg = colors.base, bg = colors.base },
          -- SnacksPickerInputBorder = { fg = colors.surface2, bg = colors.base },
          -- SnacksPickerInputSearch = { fg = colors.text, bg = colors.base },
          -- SnacksPickerList = { bg = colors.base },
          -- SnacksPickerListBorder = { fg = colors.base, bg = colors.base },
          -- SnacksPickerListTitle = { fg = colors.base, bg = colors.base },
          --
          -- -- Additional picker elements
          -- SnacksPickerDir = { fg = colors.blue },
          -- SnacksPickerFile = { fg = colors.text },
          -- SnacksPickerMatch = { fg = colors.peach, bold = true },
          -- SnacksPickerCursor = { bg = colors.surface0, fg = colors.text },
          -- SnacksPickerSelected = { bg = colors.surface0, fg = colors.text },
          -- SnacksPickerIcon = { fg = colors.blue },
          -- SnacksPickerSource = { fg = colors.overlay1 },
          -- SnacksPickerCount = { fg = colors.overlay1 },
          -- SnacksPickerFooter = { fg = colors.overlay1 },
          -- SnacksPickerHeader = { fg = colors.text, bold = true },
          -- SnacksPickerSpecial = { fg = colors.peach },
          -- SnacksPickerIndent = { fg = colors.surface1 },
          -- SnacksPickerMulti = { fg = colors.peach },
          -- SnacksPickerTitle = { fg = colors.text, bold = true },
          -- SnacksPickerPrompt = { fg = colors.text },
          --
          -- -- Snacks core components
          -- SnacksNotifierNormal = { bg = colors.mantle, fg = colors.text },
          -- SnacksNotifierBorder = { bg = colors.mantle, fg = colors.surface2 },
          -- SnacksNotifierTitle = { bg = colors.mantle, fg = colors.text, bold = true },
          -- SnacksNotifierIcon = { bg = colors.mantle, fg = colors.blue },
          -- SnacksNotifierIconInfo = { bg = colors.mantle, fg = colors.blue },
          -- SnacksNotifierIconWarn = { bg = colors.mantle, fg = colors.yellow },
          -- SnacksNotifierIconError = { bg = colors.mantle, fg = colors.red },
          --
          -- -- Snacks Dashboard
          -- SnacksDashboardNormal = { bg = colors.base, fg = colors.text },
          -- SnacksDashboardDesc = { bg = colors.base, fg = colors.subtext1 },
          -- SnacksDashboardFile = { bg = colors.base, fg = colors.text },
          -- SnacksDashboardDir = { bg = colors.base, fg = colors.blue },
          -- SnacksDashboardFooter = { bg = colors.base, fg = colors.overlay1 },
          -- SnacksDashboardHeader = { bg = colors.base, fg = colors.text, bold = true },
          -- SnacksDashboardIcon = { bg = colors.base, fg = colors.blue },
          -- SnacksDashboardKey = { bg = colors.base, fg = colors.peach },
          -- SnacksDashboardTerminal = { bg = colors.base, fg = colors.text },
          -- SnacksDashboardSpecial = { bg = colors.base, fg = colors.peach },
          --
          -- -- Snacks Terminal
          -- SnacksTerminalNormal = { bg = colors.mantle, fg = colors.text },
          -- SnacksTerminalBorder = { bg = colors.mantle, fg = colors.surface2 },
          -- SnacksTerminalTitle = { bg = colors.mantle, fg = colors.text, bold = true },
          --
          -- CmpItemMenu = { fg = colors.surface2 },
          -- CursorLineNr = { fg = colors.text },
          -- GitSignsChange = { fg = colors.peach },
          -- LineNr = { fg = colors.overlay0 },
          -- LspInfoBorder = { link = "FloatBorder" },
          -- VertSplit = { bg = colors.base, fg = colors.surface0 },
          -- WhichKeyFloat = { bg = colors.mantle },
          -- YankHighlight = { bg = colors.surface2 },
          -- FidgetTask = { fg = colors.subtext1 },
          -- FidgetTitle = { fg = colors.peach },
          --
          -- IblIndent = { fg = colors.surface0 },
          -- IblScope = { fg = colors.overlay0 },
          --
          -- Boolean = { fg = colors.mauve },
          -- Number = { fg = colors.mauve },
          -- Float = { fg = colors.mauve },
          --
          -- PreProc = { fg = colors.mauve },
          -- PreCondit = { fg = colors.mauve },
          -- Include = { fg = colors.mauve },
          -- Define = { fg = colors.mauve },
          -- Conditional = { fg = colors.red },
          -- Repeat = { fg = colors.red },
          -- Keyword = { fg = colors.red },
          -- Typedef = { fg = colors.red },
          -- Exception = { fg = colors.red },
          -- Statement = { fg = colors.red },
          --
          -- Error = { fg = colors.red },
          -- StorageClass = { fg = colors.peach },
          -- Tag = { fg = colors.peach },
          -- Label = { fg = colors.peach },
          -- Structure = { fg = colors.peach },
          -- Operator = { fg = colors.peach },
          -- Title = { fg = colors.peach },
          -- Special = { fg = colors.yellow },
          -- SpecialChar = { fg = colors.yellow },
          -- Type = { fg = colors.yellow, style = { "bold" } },
          -- Function = { fg = colors.green, style = { "bold" } },
          -- Delimiter = { fg = colors.subtext1 },
          -- Ignore = { fg = colors.subtext1 },
          -- Macro = { fg = colors.teal },
          --
          -- TSAnnotation = { fg = colors.mauve },
          -- TSAttribute = { fg = colors.mauve },
          -- TSBoolean = { fg = colors.mauve },
          -- TSCharacter = { fg = colors.teal },
          -- TSCharacterSpecial = { link = "SpecialChar" },
          -- TSComment = { link = "Comment" },
          -- TSConditional = { fg = colors.red },
          -- TSConstBuiltin = { fg = colors.mauve },
          -- TSConstMacro = { fg = colors.mauve },
          -- TSConstant = { fg = colors.text },
          -- TSConstructor = { fg = colors.green },
          -- TSDebug = { link = "Debug" },
          -- TSDefine = { link = "Define" },
          -- TSEnvironment = { link = "Macro" },
          -- TSEnvironmentName = { link = "Type" },
          -- TSError = { link = "Error" },
          -- TSException = { fg = colors.red },
          -- TSField = { fg = colors.blue },
          -- TSFloat = { fg = colors.mauve },
          -- TSFuncBuiltin = { fg = colors.green },
          -- TSFuncMacro = { fg = colors.green },
          -- TSFunction = { fg = colors.green },
          -- TSFunctionCall = { fg = colors.green },
          -- TSInclude = { fg = colors.red },
          -- TSKeyword = { fg = colors.red },
          -- TSKeywordFunction = { fg = colors.red },
          -- TSKeywordOperator = { fg = colors.peach },
          -- TSKeywordReturn = { fg = colors.red },
          -- TSLabel = { fg = colors.peach },
          -- TSLiteral = { link = "String" },
          -- TSMath = { fg = colors.blue },
          -- TSMethod = { fg = colors.green },
          -- TSMethodCall = { fg = colors.green },
          -- TSNamespace = { fg = colors.yellow },
          -- TSNone = { fg = colors.text },
          -- TSNumber = { fg = colors.mauve },
          -- TSOperator = { fg = colors.peach },
          -- TSParameter = { fg = colors.text },
          -- TSParameterReference = { fg = colors.text },
          -- TSPreProc = { link = "PreProc" },
          -- TSProperty = { fg = colors.blue },
          -- TSPunctBracket = { fg = colors.text },
          -- TSPunctDelimiter = { link = "Delimiter" },
          -- TSPunctSpecial = { fg = colors.blue },
          -- TSRepeat = { fg = colors.red },
          -- TSStorageClass = { fg = colors.peach },
          -- TSStorageClassLifetime = { fg = colors.peach },
          -- TSStrike = { fg = colors.subtext1 },
          -- TSString = { fg = colors.teal },
          -- TSStringEscape = { fg = colors.green },
          -- TSStringRegex = { fg = colors.green },
          -- TSStringSpecial = { link = "SpecialChar" },
          -- TSSymbol = { fg = colors.text },
          -- TSTag = { fg = colors.peach },
          -- TSTagAttribute = { fg = colors.green },
          -- TSTagDelimiter = { fg = colors.green },
          -- TSText = { fg = colors.green },
          -- TSTextReference = { link = "Constant" },
          -- TSTitle = { link = "Title" },
          -- TSTodo = { link = "Todo" },
          -- TSType = { fg = colors.yellow, style = { "bold" } },
          -- TSTypeBuiltin = { fg = colors.yellow, style = { "bold" } },
          -- TSTypeDefinition = { fg = colors.yellow, style = { "bold" } },
          -- TSTypeQualifier = { fg = colors.peach, style = { "bold" } },
          -- TSURI = { fg = colors.blue },
          -- TSVariable = { fg = colors.text },
          -- TSVariableBuiltin = { fg = colors.mauve },
          --
          -- ["@annotation"] = { link = "TSAnnotation" },
          -- ["@attribute"] = { link = "TSAttribute" },
          -- ["@boolean"] = { link = "TSBoolean" },
          -- ["@character"] = { link = "TSCharacter" },
          -- ["@character.special"] = { link = "TSCharacterSpecial" },
          -- ["@comment"] = { link = "TSComment" },
          -- ["@conceal"] = { link = "Grey" },
          -- ["@conditional"] = { link = "TSConditional" },
          -- ["@constant"] = { link = "TSConstant" },
          -- ["@constant.builtin"] = { link = "TSConstBuiltin" },
          -- ["@constant.macro"] = { link = "TSConstMacro" },
          -- ["@constructor"] = { link = "TSConstructor" },
          -- ["@debug"] = { link = "TSDebug" },
          -- ["@define"] = { link = "TSDefine" },
          -- ["@error"] = { link = "TSError" },
          -- ["@exception"] = { link = "TSException" },
          -- ["@field"] = { link = "TSField" },
          -- ["@float"] = { link = "TSFloat" },
          -- ["@function"] = { link = "TSFunction" },
          -- ["@function.builtin"] = { link = "TSFuncBuiltin" },
          -- ["@function.call"] = { link = "TSFunctionCall" },
          -- ["@function.macro"] = { link = "TSFuncMacro" },
          -- ["@include"] = { link = "TSInclude" },
          -- ["@keyword"] = { link = "TSKeyword" },
          -- ["@keyword.function"] = { link = "TSKeywordFunction" },
          -- ["@keyword.operator"] = { link = "TSKeywordOperator" },
          -- ["@keyword.return"] = { link = "TSKeywordReturn" },
          -- ["@label"] = { link = "TSLabel" },
          -- ["@math"] = { link = "TSMath" },
          -- ["@method"] = { link = "TSMethod" },
          -- ["@method.call"] = { link = "TSMethodCall" },
          -- ["@namespace"] = { link = "TSNamespace" },
          -- ["@none"] = { link = "TSNone" },
          -- ["@number"] = { link = "TSNumber" },
          -- ["@operator"] = { link = "TSOperator" },
          -- ["@parameter"] = { link = "TSParameter" },
          -- ["@parameter.reference"] = { link = "TSParameterReference" },
          -- ["@preproc"] = { link = "TSPreProc" },
          -- ["@property"] = { link = "TSProperty" },
          -- ["@punctuation.bracket"] = { link = "TSPunctBracket" },
          -- ["@punctuation.delimiter"] = { link = "TSPunctDelimiter" },
          -- ["@punctuation.special"] = { link = "TSPunctSpecial" },
          -- ["@repeat"] = { link = "TSRepeat" },
          -- ["@storageclass"] = { link = "TSStorageClass" },
          -- ["@storageclass.lifetime"] = { link = "TSStorageClassLifetime" },
          -- ["@strike"] = { link = "TSStrike" },
          -- ["@string"] = { link = "TSString" },
          -- ["@string.escape"] = { link = "TSStringEscape" },
          -- ["@string.regex"] = { link = "TSStringRegex" },
          -- ["@string.special"] = { link = "TSStringSpecial" },
          -- ["@symbol"] = { link = "TSSymbol" },
          -- ["@tag"] = { link = "TSTag" },
          -- ["@tag.attribute"] = { link = "TSTagAttribute" },
          -- ["@tag.delimiter"] = { link = "TSTagDelimiter" },
          -- ["@text"] = { link = "TSText" },
          -- ["@text.danger"] = { link = "TSDanger" },
          -- ["@text.diff.add"] = { link = "diffAdded" },
          -- ["@text.diff.delete"] = { link = "diffRemoved" },
          -- ["@text.emphasis"] = { link = "TSEmphasis" },
          -- ["@text.environment"] = { link = "TSEnvironment" },
          -- ["@text.environment.name"] = { link = "TSEnvironmentName" },
          -- ["@text.literal"] = { link = "TSLiteral" },
          -- ["@text.math"] = { link = "TSMath" },
          -- ["@text.note"] = { link = "TSNote" },
          -- ["@text.reference"] = { link = "TSTextReference" },
          -- ["@text.strike"] = { link = "TSStrike" },
          -- ["@text.strong"] = { link = "TSStrong" },
          -- ["@text.title"] = { link = "TSTitle" },
          -- ["@text.todo"] = { link = "TSTodo" },
          -- ["@text.todo.checked"] = { link = "Green" },
          -- ["@text.todo.unchecked"] = { link = "Ignore" },
          -- ["@text.underline"] = { link = "TSUnderline" },
          -- ["@text.uri"] = { link = "TSURI" },
          -- ["@text.warning"] = { link = "TSWarning" },
          -- ["@todo"] = { link = "TSTodo" },
          -- ["@type"] = { link = "TSType" },
          -- ["@type.builtin"] = { link = "TSTypeBuiltin" },
          -- ["@type.definition"] = { link = "TSTypeDefinition" },
          -- ["@type.qualifier"] = { link = "TSTypeQualifier" },
          -- ["@uri"] = { link = "TSURI" },
          -- ["@variable"] = { link = "TSVariable" },
          -- ["@variable.builtin"] = { link = "TSVariableBuiltin" },
          --
          -- ["@lsp.type.class"] = { link = "TSType" },
          -- ["@lsp.type.comment"] = { link = "TSComment" },
          -- ["@lsp.type.decorator"] = { link = "TSFunction" },
          -- ["@lsp.type.enum"] = { link = "TSType" },
          -- ["@lsp.type.enumMember"] = { link = "TSProperty" },
          -- ["@lsp.type.events"] = { link = "TSLabel" },
          -- ["@lsp.type.function"] = { link = "TSFunction" },
          -- ["@lsp.type.interface"] = { link = "TSType" },
          -- ["@lsp.type.keyword"] = { link = "TSKeyword" },
          -- ["@lsp.type.macro"] = { link = "TSConstMacro" },
          -- ["@lsp.type.method"] = { link = "TSMethod" },
          -- ["@lsp.type.modifier"] = { link = "TSTypeQualifier" },
          -- ["@lsp.type.namespace"] = { link = "TSNamespace" },
          -- ["@lsp.type.number"] = { link = "TSNumber" },
          -- ["@lsp.type.operator"] = { link = "TSOperator" },
          -- ["@lsp.type.parameter"] = { link = "TSParameter" },
          -- ["@lsp.type.property"] = { link = "TSProperty" },
          -- ["@lsp.type.regexp"] = { link = "TSStringRegex" },
          -- ["@lsp.type.string"] = { link = "TSString" },
          -- ["@lsp.type.struct"] = { link = "TSType" },
          -- ["@lsp.type.type"] = { link = "TSType" },
          -- ["@lsp.type.typeParameter"] = { link = "TSTypeDefinition" },
          -- ["@lsp.type.variable"] = { link = "TSVariable" },
        }
      end,
    }
  end,

  config = function(_, opts)
    require("catppuccin").setup(opts)
    vim.cmd.colorscheme("catppuccin")
  end,
}

-- `vim.tbl_deep_extend` function which is used for merging tables and their values recursively.
-- local result = vim.tbl_deep_extend("force", hlgroups, styles[telescope_style])
